@page "/"
@using BudgetPlanner.Cache
@using BudgetPlanner.Interfaces
@using BudgetPlanner.Manager
@using BudgetPlanner.Model
@using Microsoft.AspNetCore.Components

@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="card shadow p-4 mx-auto" style="max-width: 400px;">
        <h2 class="text-center">Willkommen zurück!</h2>
        <p class="text-center">Melde dich mit deinem Konto an.</p>

        <div class="mb-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" @bind="_user.Name" placeholder="Dein Name" />
        </div>

        <div class="mb-3">
            <label class="form-label">Passwort</label>
            <input type="password" class="form-control" @bind="_user.Password" placeholder="Passwort eingeben" />
        </div>

        <button class="btn custom-btn w-100" @onclick="LoginUser">Anmelden</button>

        <p class="mt-3 text-center text-danger">@_message</p>

        <p class="mt-3 text-center">
            Noch kein Konto? <a href="/register">Jetzt registrieren</a>
        </p>
    </div>
</div>

@code {
    private User _user = new();
    private string _message = "";
    private readonly IUserManager _userManager;

    public Login(IUserManager userManager)
    {
        _userManager = userManager;
    }

    protected override async void OnInitialized()
    {
        if (UserCache.UserId > 0)
        {
            bool Logoff = await Application.Current.MainPage.DisplayAlert(
                title: "Nicht möglich",
                message: "Du musst dich abmelden um auf der Seite fortzufahren. Möchtest du dich abmelden?",
                accept: "Ja", 
                cancel: "Nein");

            if (Logoff)
                await _userManager.LogoffUser();
            else
                Navigation.NavigateTo("/home");
        }
    }

    private async void LoginUser()
    {
        if (string.IsNullOrWhiteSpace(_user.Name) || string.IsNullOrWhiteSpace(_user.Password))
        {
            _message = "Bitte fülle alle Felder aus!";
            return;
        }

        bool success = await _userManager.LogInUserAsync(_user.Name, _user.Password);

        if (!success)
        {
            _message = "Name oder Passwort ist nicht korrekt.";
            return;
        }

        _message = "Login erfolgreich! ✅";

        // Swith to Home-Page
        Navigation.NavigateTo("/home");
    }
}
